{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ahmed\\\\OneDrive\\\\Documents\\\\github_easy_cars\\\\easy_cars\\\\frontend\\\\src\\\\components\\\\ui\\\\Alert.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport \"./Alert.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = ({\n  message,\n  type = \"info\",\n  dismissible = true,\n  duration = 0,\n  onClose\n}) => {\n  _s();\n  const [visible, setVisible] = useState(true);\n  const timerRef = useRef(null);\n\n  // Reset the visibility when message changes\n  useEffect(() => {\n    // If we get a new message, make sure the alert is visible\n    setVisible(true);\n\n    // Clear any existing timers\n    if (timerRef.current) {\n      clearTimeout(timerRef.current);\n      timerRef.current = null;\n    }\n\n    // Only set a timer if duration is positive\n    if (duration > 0) {\n      timerRef.current = setTimeout(() => {\n        setVisible(false);\n        if (onClose) onClose();\n      }, duration);\n    }\n    return () => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n    };\n  }, [message, duration, onClose]);\n  const handleClose = () => {\n    setVisible(false);\n    if (onClose) onClose();\n  };\n  if (!visible || !message) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `alert alert-${type}`,\n    role: \"alert\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-content\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), dismissible && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"alert-close\",\n      onClick: handleClose,\n      \"aria-label\": \"Close alert\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Alert, \"2B7L49jAItQrF52yxl6UBqKApLQ=\");\n_c = Alert;\nexport default Alert;\nvar _c;\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useRef","jsxDEV","_jsxDEV","Alert","message","type","dismissible","duration","onClose","visible","setVisible","timerRef","current","clearTimeout","setTimeout","handleClose","className","role","children","fileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ahmed/OneDrive/Documents/github_easy_cars/easy_cars/frontend/src/components/ui/Alert.js"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect, useRef } from \"react\"\r\nimport \"./Alert.css\"\r\n\r\nconst Alert = ({ message, type = \"info\", dismissible = true, duration = 0, onClose }) => {\r\n  const [visible, setVisible] = useState(true)\r\n  const timerRef = useRef(null)\r\n  \r\n  // Reset the visibility when message changes\r\n  useEffect(() => {\r\n    // If we get a new message, make sure the alert is visible\r\n    setVisible(true)\r\n    \r\n    // Clear any existing timers\r\n    if (timerRef.current) {\r\n      clearTimeout(timerRef.current)\r\n      timerRef.current = null\r\n    }\r\n    \r\n    // Only set a timer if duration is positive\r\n    if (duration > 0) {\r\n      timerRef.current = setTimeout(() => {\r\n        setVisible(false)\r\n        if (onClose) onClose()\r\n      }, duration)\r\n    }\r\n    \r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearTimeout(timerRef.current)\r\n      }\r\n    }\r\n  }, [message, duration, onClose])\r\n  \r\n  const handleClose = () => {\r\n    setVisible(false)\r\n    if (onClose) onClose()\r\n  }\r\n\r\n  if (!visible || !message) return null\r\n\r\n  return (\r\n    <div className={`alert alert-${type}`} role=\"alert\">\r\n      <div className=\"alert-content\">{message}</div>\r\n      {dismissible && (\r\n        <button \r\n          className=\"alert-close\" \r\n          onClick={handleClose}\r\n          aria-label=\"Close alert\"\r\n        >\r\n          &times;\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,YAAA;EAAAC,EAAA,GAAAC,YAAA;AAEZ,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI,GAAG,MAAM;EAAEC,WAAW,GAAG,IAAI;EAAEC,QAAQ,GAAG,CAAC;EAAEC;AAAQ,CAAC,KAAK;EAAAZ,EAAA;EACvF,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMa,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAD,SAAS,CAAC,MAAM;IACd;IACAW,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACA,IAAIC,QAAQ,CAACC,OAAO,EAAE;MACpBC,YAAY,CAACF,QAAQ,CAACC,OAAO,CAAC;MAC9BD,QAAQ,CAACC,OAAO,GAAG,IAAI;IACzB;;IAEA;IACA,IAAIL,QAAQ,GAAG,CAAC,EAAE;MAChBI,QAAQ,CAACC,OAAO,GAAGE,UAAU,CAAC,MAAM;QAClCJ,UAAU,CAAC,KAAK,CAAC;QACjB,IAAIF,OAAO,EAAEA,OAAO,CAAC,CAAC;MACxB,CAAC,EAAED,QAAQ,CAAC;IACd;IAEA,OAAO,MAAM;MACX,IAAII,QAAQ,CAACC,OAAO,EAAE;QACpBC,YAAY,CAACF,QAAQ,CAACC,OAAO,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACR,OAAO,EAAEG,QAAQ,EAAEC,OAAO,CAAC,CAAC;EAEhC,MAAMO,WAAW,GAAGA,CAAA,KAAM;IACxBL,UAAU,CAAC,KAAK,CAAC;IACjB,IAAIF,OAAO,EAAEA,OAAO,CAAC,CAAC;EACxB,CAAC;EAED,IAAI,CAACC,OAAO,IAAI,CAACL,OAAO,EAAE,OAAO,IAAI;EAErC,oBACEF,OAAA;IAAKc,SAAS,EAAE,eAAeX,IAAI,EAAG;IAACY,IAAI,EAAC,OAAO;IAAAC,QAAA,gBACjDhB,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAE,QAAA,EAAEd;IAAO;MAAAe,QAAA,EAAAxB,YAAA;MAAAyB,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC7Cf,WAAW,iBACVJ,OAAA;MACEc,SAAS,EAAC,aAAa;MACvBM,OAAO,EAAEP,WAAY;MACrB,cAAW,aAAa;MAAAG,QAAA,EACzB;IAED;MAAAC,QAAA,EAAAxB,YAAA;MAAAyB,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAF,QAAA,EAAAxB,YAAA;IAAAyB,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAzB,EAAA,CAnDKO,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AAqDX,eAAeA,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}